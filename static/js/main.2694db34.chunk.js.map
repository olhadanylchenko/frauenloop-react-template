{"version":3,"sources":["components/TodoList.jsx","App.jsx","index.jsx"],"names":["TodoList","state","input","todos","handleSubmit","e","preventDefault","currentTarget","reset","editedTodos","trim","push","content","setState","onChange","target","value","handleDelete","indexToDelete","splice","onSubmit","this","type","map","item","index","key","className","onClick","Component","App","React","ReactDOM","render","document","getElementById"],"mappings":"+PA4EeA,E,2MAzEbC,MAAQ,CACNC,MAAO,GACPC,MAAO,I,EAGTC,aAAe,SAAAC,GACbA,EAAEC,iBACFD,EAAEE,cAAcC,QAGhB,IAAMC,EAAW,YAAO,EAAKR,MAAME,OAGH,KAA5B,EAAKF,MAAMC,MAAMQ,QACnBD,EAAYE,KAAK,CAAEC,QAAS,EAAKX,MAAMC,QAIzC,EAAKW,SAAS,CACZV,MAAOM,EACPP,MAAO,M,EAKXY,SAAW,SAAAT,GACT,EAAKQ,SAAS,CACZX,MAAOG,EAAEU,OAAOC,S,EAGpBC,aAAe,SAAAC,GACb,IAAMT,EAAW,YAAO,EAAKR,MAAME,OACnCM,EAAYU,OAAOD,EAAe,GAElC,EAAKL,SAAS,CACZV,MAAOM,K,wEAID,IAAD,OACP,OACE,oCACE,0BAAMW,SAAUC,KAAKjB,cACnB,2BACEkB,KAAK,OACLN,MAAOK,KAAKpB,MAAMC,MAClBY,SAAUO,KAAKP,WAEjB,8CAEF,4BACGO,KAAKpB,MAAME,MAAMoB,KAAI,SAACC,EAAMC,GAAP,OACpB,wBAAIC,IAAKD,GACND,EAAKZ,QACN,0BAAMe,UAAU,oBACd,4BACEL,KAAK,SACLM,QAAS,WACP,EAAKX,aAAaQ,IAEpBE,UAAU,UALZ,gB,GAxDOE,aCaRC,E,iLATX,OACE,8BACE,yCACA,kBAAC,EAAD,W,GANUC,IAAMF,WCExBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.2694db34.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass TodoList extends Component {\n  state = {\n    input: \"\",\n    todos: []\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    e.currentTarget.reset();\n\n    // copy todo list\n    const editedTodos = [...this.state.todos];\n    // add a new todo to the list\n    // editedTodos.push({ content: ?? });\n    if (this.state.input.trim() !== \"\") {\n      editedTodos.push({ content: this.state.input });\n    }\n    // save the updated list and reset `input`\n    // this.setState({\n    this.setState({\n      todos: editedTodos,\n      input: \"\"\n    });\n    // });\n  };\n\n  onChange = e => {\n    this.setState({\n      input: e.target.value\n    });\n  };\n  handleDelete = indexToDelete => {\n    const editedTodos = [...this.state.todos];\n    editedTodos.splice(indexToDelete, 1);\n\n    this.setState({\n      todos: editedTodos\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            value={this.state.input}\n            onChange={this.onChange}\n          ></input>\n          <button>save todo</button>\n        </form>\n        <ul>\n          {this.state.todos.map((item, index) => (\n            <li key={index}>\n              {item.content}\n              <span className=\"delete-container\">\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    this.handleDelete(index);\n                  }}\n                  className=\"delete\"\n                >\n                  x\n                </button>\n              </span>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default TodoList;\n","import React from \"react\";\nimport TodoList from \"./components/TodoList\";\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <main>\n        <h1>Todo List</h1>\n        <TodoList />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}